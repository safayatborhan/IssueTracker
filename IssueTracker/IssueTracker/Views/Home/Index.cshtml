@model IssueTracker.Models.IssueLogHomeIndexModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.WorkListForChart.FirstOrDefault().LstProjectHour.Select(x => x.ProjectName).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.WorkListForChart.Select(x => x.LstProjectHour.Select(w => w.Hour)).ToList());
    var label2 = Newtonsoft.Json.JsonConvert.SerializeObject(Model.WorkListForChart.Select(x => x.DateOfMonth).ToList());
    ViewData["Title"] = "Stacked Chart";
}
<style>


    * {
        transition: all 0.3s ease-out;
    }

    /*html,
    body {
        height: 100%;
        font-family: "Nunito", sans-serif;
        font-size: 16px;
    }

    .container {
        width: 100%;
        height: 100%;
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        justify-content: center;
    }
        */
    .card1 h3 {
        color: #262626;
        font-size: 17px;
        line-height: 24px;
        font-weight: 700;
        margin-bottom: 4px;
    }

    .card1 ul li {
        font-size: 13px;
        font-weight: 400;
        line-height: 20px;
        color: #666666;
        text-align: left;
        margin-left: -18px;
    }

    .card1 p {
        font-size: 13px;
        font-weight: 400;
        line-height: 20px;
        color: #666666;
        text-align: left;
    }

    .card2 h3 {
        color: #262626;
        font-size: 17px;
        line-height: 24px;
        font-weight: 700;
        margin-bottom: 4px;
    }

    .card2 ul li {
        font-size: 13px;
        font-weight: 400;
        line-height: 20px;
        color: #666666;
        text-align: left;
        margin-left: -18px;
    }

    .card2 p {
        font-size: 13px;
        font-weight: 400;
        line-height: 20px;
        color: #666666;
        text-align: left;
    }

    .card3 h3 {
        color: #262626;
        font-size: 17px;
        line-height: 24px;
        font-weight: 700;
        margin-bottom: 4px;
    }

    .card3 ul li {
        font-size: 13px;
        font-weight: 400;
        line-height: 20px;
        color: #666666;
        text-align: left;
        margin-left: -18px;
    }

    .card3 p {
        font-size: 13px;
        font-weight: 400;
        line-height: 20px;
        color: #666666;
        text-align: left;
    }

    .card1 .go-corner {
        display: flex;
        align-items: center;
        justify-content: center;
        position: absolute;
        width: 32px;
        height: 32px;
        overflow: hidden;
        top: 0;
        right: 0;
        background-color: #FF7381;
        border-radius: 0 4px 0 32px;
    }

    .card1 .go-arrow {
        margin-top: -4px;
        margin-right: -4px;
        color: white;
        font-family: courier, sans;
    }

    .card2 .go-corner {
        display: flex;
        align-items: center;
        justify-content: center;
        position: absolute;
        width: 32px;
        height: 32px;
        overflow: hidden;
        top: 0;
        right: 0;
        background-color: #2CCAFA;
        border-radius: 0 4px 0 32px;
    }

    .card2 .go-arrow {
        margin-top: -4px;
        margin-right: -4px;
        color: white;
        font-family: courier, sans;
    }

    .card3 .go-corner {
        display: flex;
        align-items: center;
        justify-content: center;
        position: absolute;
        width: 32px;
        height: 32px;
        overflow: hidden;
        top: 0;
        right: 0;
        background-color: #FFE01B;
        border-radius: 0 4px 0 32px;
    }

    .card3 .go-arrow {
        margin-top: -4px;
        margin-right: -4px;
        color: white;
        font-family: courier, sans;
    }

    .card1 {
        display: block;
        position: relative;
        width: 100%;
        background-color: #f2f8f9;
        border-radius: 4px;
        padding: 32px 24px;
        margin: 12px;
        text-decoration: none;
        z-index: 0;
        overflow: hidden;
    }


        .card1:before {
            content: "";
            position: absolute;
            z-index: -1;
            top: -16px;
            right: -16px;
            background: #FF7381;
            height: 32px;
            width: 32px;
            transform: scale(1);
            transform-origin: 50% 50%;
            transition: transform 0.25s ease-out;
        }


        .card1:hover:before {
            transform: scale(21);
        }



        .card1:hover p {
            transition: all 0.3s ease-out;
            color: #ffffff;
        }

        .card1:hover h3 {
            transition: all 0.3s ease-out;
            color: #ffffff;
        }

        .card1:hover ul li {
            transition: all 0.3s ease-out;
            color: black;
        }


    .card2 {
        display: block;
        position: relative;
        width: 100%;
        background-color: #f2f8f9;
        border-radius: 4px;
        padding: 32px 24px;
        margin: 12px;
        text-decoration: none;
        z-index: 0;
        overflow: hidden;
    }

        .card2:before {
            content: "";
            position: absolute;
            z-index: -1;
            top: -16px;
            right: -16px;
            background: #2CCAFA;
            height: 32px;
            width: 32px;
            transform: scale(1);
            transform-origin: 50% 50%;
            transition: transform 0.25s ease-out;
        }

        .card2:hover:before {
            transform: scale(21);
        }


        .card2:hover p {
            transition: all 0.3s ease-out;
            color: rgba(255, 255, 255, 0.8);
        }

        .card2:hover h3 {
            transition: all 0.3s ease-out;
            color: #ffffff;
        }

        .card2:hover ul li {
            transition: all 0.3s ease-out;
            color: black;
        }


    .card3 {
        display: block;
        position: relative;
        width: 100%;
        background-color: #f2f8f9;
        border-radius: 4px;
        padding: 32px 24px;
        margin: 12px;
        text-decoration: none;
        z-index: 0;
        overflow: hidden;
    }

        .card3:before {
            content: "";
            position: absolute;
            z-index: -1;
            top: -16px;
            right: -16px;
            background: #FFE01B;
            height: 32px;
            width: 32px;
            transform: scale(1);
            transform-origin: 50% 50%;
            transition: transform 0.25s ease-out;
        }

        .card3:hover:before {
            transform: scale(21);
        }


        .card3:hover p {
            transition: all 0.3s ease-out;
            color: black;
        }

        .card3:hover h3 {
            transition: all 0.3s ease-out;
            color: black;
        }

        .card3:hover ul li {
            transition: all 0.3s ease-out;
            color: black;
        }
</style>

<div class="container">

    <div class="row">
        <div class="col-md-2">
            <img src="~/images/Welcome.svg" />
        </div>
        <div class="col-md-8">
            <h2>@Model.WelcomeMessage</h2>
            <br />
            <p>Welcome to CELPRM! This is your home page, where you can quickly see your upcoming tasks and access your most important projects. Happy working!!</p>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <img src="~/images/MyTasks.svg" />
        </div>
        <div class="col-md-6">
            <div class="chart-container">
                <canvas id="chartStacked" style="width:80%; height:300px"></canvas>
            </div>
        </div>

    </div>
    <br />
    <div class="row" style="padding-right:115px;margin-left:-40px;">
        <div class="col-md-4 text-center">
            <a class="card1" asp-controller="InvolvedPerson" asp-action="Index" asp-route-id="1">
                @if (Model.DeadlineMissedCount == 0)
                {
                    <h3>You don't have any task that missed deadline. Good Job!!</h3>
                }
                else
                {
                    <h3>Deadline missed.. Hurry up!</h3>
                    <p class="small">You have already failed @Model.DeadlineMissedCount tasks deadline...</p>
                    <ul>
                        @foreach (var text in Model.DeadlineMissedIssues)
                        {
                            <li class="small">@text.Text</li>
                        }
                    </ul>
                }

                <div class="go-corner" href="#">
                    <div class="go-arrow">
                        →
                    </div>
                </div>
            </a>
        </div>
        <div class="col-md-4 text-center">
            <a class="card2" asp-controller="InvolvedPerson" asp-action="Index" asp-route-id="2">
                @if (Model.TodaysIssueCount == 0)
                {
                    <h3>You don't have any deadline today till now...</h3>
                }
                else
                {
                    <h3>Today's deadline</h3>
                    <p class="small">You have @Model.TodaysIssueCount tasks to complete today...</p>
                    <ul>
                        @foreach (var text in Model.TodaysIssues)
                        {
                            <li class="small">@text.Text</li>
                        }
                    </ul>
                }
                <div class="go-corner" href="#">
                    <div class="go-arrow">
                        →
                    </div>
                </div>
            </a>
        </div>
        <div class="col-md-4 text-center">
            <a class="card3" asp-controller="InvolvedPerson" asp-action="Index" asp-route-id="3">
                @if (Model.UpcomingIssueCount == 0)
                {
                    <h3>You don't have any deadline in this week.</h3>
                }
                else
                {
                    <h3>Deadline coming soon!!</h3>
                    <p class="small">You have @Model.UpcomingIssueCount tasks to complete afterwards...</p>
                    <ul>
                        @foreach (var text in Model.UpcomingIssues)
                        {
                            <li class="small">@text.Text</li>
                        }
                    </ul>
                }
                <div class="go-corner" href="#">
                    <div class="go-arrow">
                        →
                    </div>
                </div>
            </a>
        </div>
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script type="text/javascript">
    $(function () {

        var chartColors = [
            'rgba(44, 202, 250, 0.5)',
            'rgba(255, 224, 27, 0.5)',
            'rgba(255, 115, 129, 0.5)',
            'rgba(255, 199, 219, 0.5)',
            'rgba(44, 202, 250, 0.5)',
            'rgba(255, 224, 27, 0.5)',
            'rgba(255, 115, 129, 0.5)',
            'rgba(255, 199, 219, 0.5)'
        ];

            var chartName = "chartStacked";
            var ctx = document.getElementById(chartName).getContext('2d');
            var XLabels = @Html.Raw(XLabels);
            var YValues = @Html.Raw( YValues );
            var label = @Html.Raw( label2 );
            var aux = 0;

            var barChartData = {
                labels:  @Html.Raw(label2),
                datasets: []
            }

            XLabels.forEach(function (a, i) {
                var data = [];
                YValues.forEach(function (a, i) {
                    data.push(a[aux]);
                });

            barChartData.datasets.push({
                label: XLabels[aux],
                //backgroundColor: random_rgba(),
                backgroundColor: chartColors[aux],
                data: data
                });
                aux++;
            });
            var options = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        stacked: true,
                        gridLines: {
                            display: true,
                            color: "rgba(255,99,164,0.2)"
                        }
                    }],
                    xAxes: [{
                        stacked: true,
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };
            function random_rgba() {
                var o = Math.round, r = Math.random, s = 255;
                return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + r().toFixed(1) + ')';
            }
            var myChart = new Chart(ctx, {
                options: options,
                data: barChartData,
                type: 'bar'

            });
        });
</script>

