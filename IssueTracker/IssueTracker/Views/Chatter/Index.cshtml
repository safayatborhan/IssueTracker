@model IEnumerable<IssueTracker.Data.Models.Message>
@{
    var userName = User.Identity.Name;
}
<style>



.border-top {
  border-top: 1px solid #e5e5e5;
}
.border-bottom {
  border-bottom: 1px solid #e5e5e5;
}

.box-shadow {
  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);
}

button.accept-policy {
  font-size: 1rem;
  line-height: inherit;
}

/* Sticky footer styles
-------------------------------------------------- */
html {
  position: relative;
  min-height: 100%;
}

body {
  /* Margin bottom by footer height */
  margin-bottom: 60px;
}
.footer {
  position: absolute;
  bottom: 0;
  width: 100%;
  white-space: nowrap;
  /* Set the fixed height of the footer here */
  height: 60px;
  line-height: 60px; /* Vertically center the text there */
}


/* Chat containers */
#chat .container {
    border: 2px solid #dedede;
    background-color: #f1f1f1;
    border-radius: 30px;
    padding: 10px;
    margin: 10px 0;
    width: 100%;
    font-family: "Open Sans", serif;
}

#chat .sender {
    font-size: 0.8em;
    font-weight: bold;
    font-family: 'Shadows Into Light', cursive;

}

/* Darker chat container */
#chat .darker {
    border-color: #fff;
    background-color: #007bff;
}

/* Clear floats */
#chat .container::after {
    content: "";
    clear: both;
    display: table;
}

/* Style images */
#chat .container img {
    float: left;
    max-width: 60px;
    width: 100%;
    margin-right: 20px;
    border-radius: 50%;
}

    /* Style the right image */
    #chat .container img.right {
        float: right;
        margin-left: 20px;
        margin-right: 0;
    }

/* Style time text */
#chat .time-right {
    float: right;
    color: #aaa;
}

/* Style time text */
#chat .time-left {
    float: left;
    color: #999;
}
</style>
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
</head>
<body>
    <div class="jumbotron bg-light-blue">
        <h2 class="text-center text-primary">
            <i class="fa-facebook">Chat</i>
        </h2>

        <div class="row">
            <div class="col-md-12" id="chat">
                @if (Model != null)
                {
                    @foreach (var message in Model.OrderBy(x => x.When))
                    {
                        string containerClass, timePosition, textAlign, contColor, offset;
                        if (userName == message.UserName)
                        {
                            containerClass = "container darker";
                            timePosition = "time-right text-light";
                            textAlign = "text-right text-white";
                            contColor = "bg-primary";
                            offset = "col-md-6 offset-md-6";
                        }
                        else
                        {
                            containerClass = "container";
                            timePosition = "time-left";
                            textAlign = "text-left";
                            contColor = "bg light";
                            offset = "";
                        }

                        <div class="row">
                            <div class="@offset">
                                <div class="@containerClass @contColor">
                                    <p class="sender @textAlign">@message.UserName</p>
                                    <p class="@textAlign">@message.Text</p>
                                    <span class="@timePosition">@message.When.ToString()</span>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="col-md-12">
                <form asp-action="Create" data-ajax-begin="clearInputField" data-ajax-complete="" data-ajax-failure="alert('Fail')" data-ajax-success="sendMessage" data-ajax="true" data-ajax-method="POST">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <input name="Text" class="form-control" id="messageText" />
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Send" id="submitButton" class="btn btn-xs btn-google" />
                    </div>
                    <input type="hidden" value="@userName" name="username" />
                </form>
            </div>
        </div>
    </div>
</body>
</html>

<script>
    const userName = "@ViewBag.CurrentUserName"
</script>



